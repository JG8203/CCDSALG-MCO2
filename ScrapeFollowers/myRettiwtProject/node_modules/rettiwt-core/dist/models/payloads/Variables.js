"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Variables = void 0;
// MODELS
var TweetFilter_1 = require("./TweetFilter");
// ENUMS
var Resources_1 = require("../../enums/Resources");
/**
 * Mandatory variables that must be sent as a URL-encoded, stringified-JSON.
 *
 * @public
 */
var Variables = /** @class */ (function () {
    /* eslint-enable */
    /**
     * Initializes the appropriate Variables object based on the requred resource type and parameters.
     *
     * @param resourceType The type of resource that is requested.
     * @param args The additional user-defined arguments for fetching the resource.
     */
    function Variables(resourceType, args) {
        this.product = 'Latest';
        this.includePromotedContent = false;
        this.referrer = '';
        this.withBirdwatchNotes = false;
        this.withCommunity = false;
        this.withDownvotePerspective = false;
        this.withQuickPromoteEligibilityTweetFields = false;
        this.withReactionsMetadata = false;
        this.withReactionsPerspective = false;
        this.withSuperFollowsTweetFields = false;
        this.withSuperFollowsUserFields = false;
        this.withV2Timeline = true;
        this.withVoice = false;
        this.with_rux_injections = false;
        this.withClientEventToken = false;
        if (resourceType == Resources_1.EResourceType.TWEET_SEARCH && args.filter) {
            this.rawQuery = new TweetFilter_1.TweetFilter(args.filter).toString();
            this.count = args.count;
            this.cursor = args.cursor;
        }
        else if (resourceType == Resources_1.EResourceType.TWEET_DETAILS) {
            this.focalTweetId = args.id;
            this.count = args.count;
            this.cursor = args.cursor;
        }
        else if (resourceType == Resources_1.EResourceType.TWEET_FAVORITERS || resourceType == Resources_1.EResourceType.TWEET_RETWEETERS) {
            this.tweetId = args.id;
            this.count = args.count;
            this.cursor = args.cursor;
        }
        else if (resourceType == Resources_1.EResourceType.USER_DETAILS) {
            this.screen_name = args.id;
        }
        else if (resourceType == Resources_1.EResourceType.USER_FOLLOWERS ||
            resourceType == Resources_1.EResourceType.USER_FOLLOWING ||
            resourceType == Resources_1.EResourceType.USER_LIKES) {
            this.userId = args.id;
            this.count = args.count;
            this.cursor = args.cursor;
        }
    }
    /**
     * Converts this object to it's string representation.
     *
     * @returns 'this' object's string representation.
     */
    Variables.prototype.toString = function () {
        return "".concat(encodeURIComponent(JSON.stringify(this)));
    };
    return Variables;
}());
exports.Variables = Variables;
//# sourceMappingURL=Variables.js.map