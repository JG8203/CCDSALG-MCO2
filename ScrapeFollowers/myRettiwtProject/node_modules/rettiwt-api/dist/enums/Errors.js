"use strict";
exports.__esModule = true;
exports.DataErrors = exports.AuthenticationErrors = void 0;
/**
 * Different types of error messages related to authentication returned by services.
 *
 * @public
 */
var AuthenticationErrors;
(function (AuthenticationErrors) {
    AuthenticationErrors["NotAuthenticated"] = "Cannot fetch this data without authentication";
    AuthenticationErrors["InvalidEmail"] = "No Twitter account found for the given email address";
    AuthenticationErrors["InvalidUsername"] = "Incorrect username given for the given Twitter account";
    AuthenticationErrors["InvalidPassword"] = "Incorrect password given for the given Twitter account";
})(AuthenticationErrors = exports.AuthenticationErrors || (exports.AuthenticationErrors = {}));
;
/**
 * Different type of error messages related to data that are returned by services.
 *
 * @public
 */
var DataErrors;
(function (DataErrors) {
    DataErrors["UserNotFound"] = "An account with given username/id was not found";
    DataErrors["TweetNotFound"] = "A tweet with the given id was not found";
    DataErrors["NoMatchingTweetsFound"] = "No tweets matching the given filter were found";
})(DataErrors = exports.DataErrors || (exports.DataErrors = {}));
;
//# sourceMappingURL=Errors.js.map