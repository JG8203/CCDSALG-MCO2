"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
exports.__esModule = true;
exports.TweetListArgs = void 0;
// PACKAGES
var class_validator_1 = require("class-validator");
var rettiwt_core_1 = require("rettiwt-core");
/**
 * The arguments for fetching cursored list in TweetService.
 *
 * @internal
 */
var TweetListArgs = /** @class */ (function () {
    /**
     * @param count The number of data items to fetch.
     * @param cursor The cursor to the batch of data to fetch.
     */
    function TweetListArgs(count, cursor) {
        if (count === void 0) { count = 10; }
        if (cursor === void 0) { cursor = ''; }
        this.count = count;
        this.cursor = cursor;
        // Validating the arguments
        var validationResult = (0, class_validator_1.validateSync)(this);
        // If valiation error occured
        if (validationResult.length) {
            throw new rettiwt_core_1.DataValidationError(validationResult);
        }
    }
    __decorate([
        (0, class_validator_1.IsInt)(),
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.Max)(100),
        (0, class_validator_1.ValidateIf)(function (ob) { return ob.cursor.length == 0; }),
        (0, class_validator_1.Min)(10),
        __metadata("design:type", Number)
    ], TweetListArgs.prototype, "count");
    __decorate([
        (0, class_validator_1.IsString)(),
        (0, class_validator_1.IsOptional)(),
        __metadata("design:type", String)
    ], TweetListArgs.prototype, "cursor");
    return TweetListArgs;
}());
exports.TweetListArgs = TweetListArgs;
//# sourceMappingURL=TweetListArgs.js.map