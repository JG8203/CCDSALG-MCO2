import { IAuthCookie } from '../../types/Authentication';
/**
 * Handles all operations related to a user's account, such as loggin in, managing account, etc
 * @public
 */
export declare class AccountService {
    /** The AuthService instance to use for authentication. */
    private auth;
    /** The current guest credentials to use. */
    private guestCreds;
    /** The email id of Twitter account to be logged into. */
    private email;
    /** The user name of the Twitter account ot be logged into */
    private userName;
    /** The password to the Twitter account to be logged into. */
    private password;
    /** The cookies received from Twitter after logging in. */
    private cookies;
    /** The flow token received after execution of current flow. */
    private flowToken;
    /**
     * @returns The current guest credentials to use. If if does not exists, then a new one is created
     */
    private getGuestCredentials;
    /**
     * Step 1: Initiates login
     * @internal
     */
    private initiateLogin;
    /**
     * Step 2: Does something
     * @internal
     */
    private jsInstrumentationSubtask;
    /**
     * Step 3: Takes the email for login
     * @internal
     *
     * @throws {@link AuthenticationErrors.InvalidEmail}, if email does not exist.
     */
    private enterUserIdentifier;
    /**
     * Step 4: Takes the username for login
     * @internal
     *
     * @throws {@link AuthenticationErrors.InvalidUsername}, if wrong username entered.
     */
    private enterAlternateUserIdentifier;
    /**
     * Step 5: Takes the password for login
     * @internal
     *
     * @throws {@link AuthenticationErrors.InvalidPassword}, incorrect password entered.
     */
    private enterPassword;
    /**
     * Step 6: Gets the actual cookies
     * @internal
     */
    private accountDuplicationCheck;
    /**
     * Parse the authentication cookies recieved from Twitter into known format.
     *
     * @internal
     *
     * @param cookies The raw cookies received from Twitter.
     *
     * @returns The parsed cookies of type {@link AuthCookie}
     */
    private parseCookies;
    /**
     * Login to Twitter using the given credentials and get back the cookies.
     *
     * @public
     *
     * @param email The email of the account to be logged into.
     * @param userName The username associated with the given account.
     * @param password The password to the account.
     *
     * @returns The cookies for authenticating with the given account.
     */
    login(email: string, userName: string, password: string): Promise<IAuthCookie>;
}
