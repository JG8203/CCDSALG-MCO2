import { TweetFilter } from 'rettiwt-core';
import ResolverBase from './ResolverBase';
import { IDataContext } from '../../types/Rettiwt';
export default class TweetResolver extends ResolverBase {
    private batchSize;
    constructor(context: IDataContext);
    /**
     * @returns The details of the tweet with the given id
     * @param id The id of the tweet which is to be fetched
     */
    resolveTweet(id: string): Promise<any>;
    /**
     * @returns The list of tweets matching the given filter
     * @param filter The filter to be used for fetching matching tweets
     * @param count The number of tweets to fetch, must be >= 20 (when no cursor if provided)
     * @param cursor The cursor to the batch of tweets to fetch
     */
    resolveTweets(filter: TweetFilter, count: number, cursor: string): Promise<any>;
    /**
     * @returns The list of quotes of the given tweet
     * @param id The id of the tweet whose quotes are to be fetched
     * @param count The number of quotes to be fetched, must be >= 20 (when no cursor if provided)
     * @param all Whether to fetch all quotes or not
     * @param cursor The cursor to the batch of tweet quotes to fetch
     * @param quoteCount The total number of quotes of the given tweet
     */
    resolveTweetQuotes(id: string, count: number, all: boolean, cursor: string, quoteCount: number): Promise<any[]>;
    /**
     * @returns The list of likers of the given tweet
     * @param id The id of the tweet whose likers are to be fetched
     * @param count The total number of likers to fetch, must be >= 10 (when no cursor is provided)
     * @param all Whether to fetch all the likers of the tweet
     * @param cursor The cursor to the batch of likers to fetch
     * @param likesCount The total number of like of the tweet
     */
    resolveTweetLikers(id: string, count: number, all: boolean, cursor: string, likesCount: number): Promise<any>;
    /**
     * @returns The list of retweeters of the given tweet
     * @param id The id of the tweet whose retweeters are to be fetched
     * @param count The total number of retweeters to fetch, must be >= 10 (when no cursor is provided)
     * @param all Whether to fetch all retweeters
     * @param cursor The cursor to the batch of retweeters to fetch
     * @param retweetsCount The total number of retweets of the
     */
    resolveTweetRetweeters(id: string, count: number, all: boolean, cursor: string, retweetsCount: number): Promise<any>;
}
