import ResolverBase from './ResolverBase';
import { IDataContext } from '../../types/Rettiwt';
export default class UserResolver extends ResolverBase {
    private batchSize;
    constructor(context: IDataContext);
    /**
     * @returns The details of the target twitter user
     * @param userName The user name of the target twitter user
     * @param id The id/username of the target twitter user
     */
    resolveUserDetails(id: string): Promise<any>;
    /**
     * @returns The list of tweets made by the given user
     * @param userName The username of the user whose tweets are to be fetched
     * @param count The number of tweets to fetch, must be >= 10
     * @param all Whether to fetch list of all tweets made by user
     * @param cursor The cursor to the batch of tweets to fetch
     * @param statusesCount The total number of tweets made by target user
     */
    resolveUserTweets(userName: string, count: number, all: boolean, cursor: string, statusesCount: number): Promise<any>;
    /**
     * @returns The list of tweets liked by the given user
     * @param id The id of the user whose likes are to be fetched
     * @param count The number of likes to fetch, must be >= 40
     * @param all Whether to fetch list of all tweets liked by user
     * @param cursor The cursor to the batch of likes to fetch
     * @param favouritesCount The total number of tweets liked by target user
     */
    resolveUserLikes(id: string, count: number, all: boolean, cursor: string, favouritesCount: number): Promise<any>;
    /**
     * @returns The list of followers of the given twiiter user
     * @param id The id of the user whose followers are to be fetched
     * @param count The number of followers to fetch, must be >= 40 when no cursor is provided
     * @param all Whether to fetch all followers list
     * @param cursor The cursor to the batch of followers to fetch
     * @param followerCount The total number of followers of the target user
     */
    resolveUserFollowers(id: string, count: number, all: boolean, cursor: string, followersCount: number): Promise<any>;
    /**
     * @returns The list of following of the given twiiter user
     * @param id The id of the user whose followings are to be fetched
     * @param count The number of following to fetch, should be >= 40 when no cursor is provided
     * @param all Whether to fetch list of all followings
     * @param cursor The cursor to the batch of followings to fetch
     * @param followingsCount The total number of followings of the target user
     */
    resolveUserFollowing(id: string, count: number, all: boolean, cursor: string, followingsCount: number): Promise<any>;
}
