"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
exports.__esModule = true;
exports.DataValidationError = exports.AuthCookie = exports.TweetFilter = exports.Rettiwt = void 0;
// PACKAGES
require("reflect-metadata");
// SERVICES
var AuthService_1 = require("./services/auth/AuthService");
var UserService_1 = require("./services/data/UserService");
var TweetService_1 = require("./services/data/TweetService");
var AccountService_1 = require("./services/auth/AccountService");
/**
 * The instance for fetching data from Twitter.
 *
 * @public
 *
 * @param cookie The cookie to use to fetch data.
 *
 * @returns The API for fetching user and tweet data.
 *
 * @remarks The cookie can be obtained by using {@link AccountService.login} method.
 * To use the {@link AccountService.login} method, create a {@link Rettiwt} instance without passing any cookie .
 * Then use the {@link AccountService.login} method of {@link AccountService} to get the cookie.
 */
var Rettiwt = function (cookie) {
    // Creating new auth service instance using the given cookie
    var auth = new AuthService_1.AuthService(cookie);
    // Using the auth service instance to create data services instances
    return {
        users: new UserService_1.UserService(auth),
        tweets: new TweetService_1.TweetService(auth),
        account: new AccountService_1.AccountService()
    };
};
exports.Rettiwt = Rettiwt;
// Exporting classes
__exportStar(require("./services/auth/AuthService"), exports);
__exportStar(require("./services/auth/AccountService"), exports);
__exportStar(require("./services/data/TweetService"), exports);
__exportStar(require("./services/data/UserService"), exports);
__exportStar(require("./services/util/CacheService"), exports);
__exportStar(require("./services/util/FetcherService"), exports);
__exportStar(require("./types/Args"), exports);
__exportStar(require("./types/Rettiwt"), exports);
__exportStar(require("./types/Service"), exports);
__exportStar(require("./types/Tweet"), exports);
__exportStar(require("./types/User"), exports);
// Exporting models
var rettiwt_core_1 = require("rettiwt-core");
__createBinding(exports, rettiwt_core_1, "TweetFilter");
__exportStar(require("./models/args/TweetListArgs"), exports);
__exportStar(require("./models/args/UserListArgs"), exports);
var AuthCookie_1 = require("./models/auth/AuthCookie");
__createBinding(exports, AuthCookie_1, "AuthCookie");
__exportStar(require("./models/data/CursoredData"), exports);
__exportStar(require("./models/data/Tweet"), exports);
__exportStar(require("./models/data/User"), exports);
var rettiwt_core_2 = require("rettiwt-core");
__createBinding(exports, rettiwt_core_2, "DataValidationError");
//# sourceMappingURL=index.js.map